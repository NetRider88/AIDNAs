# Generated by Django 5.2.4 on 2025-07-15 13:01

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="ProjectCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("slug", models.SlugField(blank=True, unique=True)),
                ("description", models.TextField(blank=True)),
                (
                    "icon",
                    models.CharField(
                        blank=True, help_text="Font Awesome icon class", max_length=50
                    ),
                ),
                (
                    "color",
                    models.CharField(
                        default="#3B82F6", help_text="Hex color code", max_length=7
                    ),
                ),
                ("order", models.PositiveIntegerField(default=0)),
            ],
            options={
                "verbose_name_plural": "Project Categories",
                "ordering": ["order", "name"],
            },
        ),
        migrations.CreateModel(
            name="Technology",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "icon",
                    models.CharField(
                        blank=True,
                        help_text="Font Awesome or tech icon class",
                        max_length=50,
                    ),
                ),
                (
                    "color",
                    models.CharField(
                        default="#10B981", help_text="Hex color code", max_length=7
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Technologies",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Project",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("slug", models.SlugField(blank=True, unique=True)),
                (
                    "tagline",
                    models.CharField(
                        blank=True, help_text="Brief one-liner", max_length=300
                    ),
                ),
                (
                    "description",
                    models.TextField(help_text="Detailed project description"),
                ),
                (
                    "short_description",
                    models.CharField(help_text="For project cards", max_length=500),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("live", "Live"),
                            ("in_progress", "In Progress"),
                            ("planned", "Planned"),
                            ("paused", "Paused"),
                        ],
                        default="planned",
                        max_length=20,
                    ),
                ),
                ("start_date", models.DateField()),
                ("launch_date", models.DateField(blank=True, null=True)),
                (
                    "expected_launch",
                    models.DateField(
                        blank=True, help_text="For in-progress projects", null=True
                    ),
                ),
                ("live_url", models.URLField(blank=True, help_text="Live project URL")),
                ("github_url", models.URLField(blank=True)),
                ("demo_url", models.URLField(blank=True)),
                (
                    "featured_image",
                    models.ImageField(blank=True, upload_to="projects/featured/"),
                ),
                ("logo", models.ImageField(blank=True, upload_to="projects/logos/")),
                (
                    "key_metrics",
                    models.TextField(
                        blank=True, help_text="Key achievements or metrics"
                    ),
                ),
                (
                    "user_impact",
                    models.CharField(
                        blank=True, help_text="How it helps users", max_length=500
                    ),
                ),
                (
                    "is_featured",
                    models.BooleanField(default=False, help_text="Show on homepage"),
                ),
                (
                    "order",
                    models.PositiveIntegerField(default=0, help_text="Display order"),
                ),
                ("meta_description", models.CharField(blank=True, max_length=160)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "categories",
                    models.ManyToManyField(blank=True, to="projects.projectcategory"),
                ),
                (
                    "technologies",
                    models.ManyToManyField(blank=True, to="projects.technology"),
                ),
            ],
            options={
                "ordering": ["order", "-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ProjectImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("image", models.ImageField(upload_to="projects/gallery/")),
                ("caption", models.CharField(blank=True, max_length=200)),
                ("order", models.PositiveIntegerField(default=0)),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="images",
                        to="projects.project",
                    ),
                ),
            ],
            options={
                "ordering": ["order"],
            },
        ),
        migrations.CreateModel(
            name="ProjectUpdate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("content", models.TextField()),
                ("image", models.ImageField(blank=True, upload_to="projects/updates/")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="updates",
                        to="projects.project",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
    ]
